import express, { json, urlencoded } from 'express';
import swaggerUi from 'swagger-ui-express';
import swaggerJsdoc from 'swagger-jsdoc';
import cors from 'cors';
import { logger } from './helper';
import morgan from 'morgan';
import route from './route'

const PORT =  5000;
const options = {
    // List of files to be processes. You can also set globs './routes/*.js'
    apis: ['./server/index.js'],
    basePath: '/',
    swaggerDefinition: {
      // Like the one described here: https://swagger.io/specification/#infoObject
      info: {
        description: 'ocx API with autogenerated swagger doc',
        swagger: '2.0',
        title: 'ocx access',
        contact: {
            name: "ekoinnovationhub"
          },
       servers: ["http://localhost:6000"],
       version: '1.0.0',
      },
    },
};

const specs = swaggerJsdoc(options);
const app = express();
app.use(cors());
app.use(json());
app.use(urlencoded({ extended: false, }));
app.use(morgan('combined', { stream: logger.stream }));
app.use("/api-docs", swaggerUi.serve, swaggerUi.setup(specs));
app.use((err, req, res, next) => {
    logger.error(`${err.status || 500} - ${err.message} - ${req.originalUrl} - ${req.method} - ${req.ip}`);
    res.status(500).send('server error, this will be resolved shortly!')
  })

/**
 * @swagger
 * /:
 *  get:
 *    description: Use to test if app is working
 *    responses:
 *      '200':
 *        description: A successful response
 */
app.get('/', (request, response) => {
    response.status(200).send('Welcome to ocx:access');
  });
  app.use('/access/v1', route);
  app.use('*', (request, response) => {
    response.status(404).send('Not Found');
  });
  
  app.listen(PORT, () => logger.info(`Server started on port ${PORT}`));
  
  export default app;